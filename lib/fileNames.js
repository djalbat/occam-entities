"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    META_JSON_FILE_NAME: function() {
        return META_JSON_FILE_NAME;
    },
    OPERATOR_PATTERN_FILE_NAME: function() {
        return OPERATOR_PATTERN_FILE_NAME;
    },
    README_MD_FILE_NAME: function() {
        return README_MD_FILE_NAME;
    },
    STATEMENT_BNF_FILE_NAME: function() {
        return STATEMENT_BNF_FILE_NAME;
    },
    SYMBOL_PATTERN_FILE_NAME: function() {
        return SYMBOL_PATTERN_FILE_NAME;
    },
    TERM_BNF_FILE_NAME: function() {
        return TERM_BNF_FILE_NAME;
    },
    TYPE_PATTERN_FILE_NAME: function() {
        return TYPE_PATTERN_FILE_NAME;
    },
    default: function() {
        return _default;
    }
});
var README_MD_FILE_NAME = "README.md";
var META_JSON_FILE_NAME = "meta.json";
var TERM_BNF_FILE_NAME = "term.bnf";
var STATEMENT_BNF_FILE_NAME = "statement.bnf";
var TYPE_PATTERN_FILE_NAME = "type.ptn";
var SYMBOL_PATTERN_FILE_NAME = "symbol.ptn";
var OPERATOR_PATTERN_FILE_NAME = "operator.ptn";
var _default = {
    README_MD_FILE_NAME: README_MD_FILE_NAME,
    META_JSON_FILE_NAME: META_JSON_FILE_NAME,
    TERM_BNF_FILE_NAME: TERM_BNF_FILE_NAME,
    STATEMENT_BNF_FILE_NAME: STATEMENT_BNF_FILE_NAME,
    TYPE_PATTERN_FILE_NAME: TYPE_PATTERN_FILE_NAME,
    SYMBOL_PATTERN_FILE_NAME: SYMBOL_PATTERN_FILE_NAME,
    OPERATOR_PATTERN_FILE_NAME: OPERATOR_PATTERN_FILE_NAME
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maWxlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBSRUFETUVfTURfRklMRV9OQU1FID0gXCJSRUFETUUubWRcIjtcbmV4cG9ydCBjb25zdCBNRVRBX0pTT05fRklMRV9OQU1FID0gXCJtZXRhLmpzb25cIjtcblxuZXhwb3J0IGNvbnN0IFRFUk1fQk5GX0ZJTEVfTkFNRSA9IFwidGVybS5ibmZcIjtcbmV4cG9ydCBjb25zdCBTVEFURU1FTlRfQk5GX0ZJTEVfTkFNRSA9IFwic3RhdGVtZW50LmJuZlwiO1xuZXhwb3J0IGNvbnN0IFRZUEVfUEFUVEVSTl9GSUxFX05BTUUgPSBcInR5cGUucHRuXCI7XG5leHBvcnQgY29uc3QgU1lNQk9MX1BBVFRFUk5fRklMRV9OQU1FID0gXCJzeW1ib2wucHRuXCI7XG5leHBvcnQgY29uc3QgT1BFUkFUT1JfUEFUVEVSTl9GSUxFX05BTUUgPSBcIm9wZXJhdG9yLnB0blwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFJFQURNRV9NRF9GSUxFX05BTUUsXG4gIE1FVEFfSlNPTl9GSUxFX05BTUUsXG4gIFRFUk1fQk5GX0ZJTEVfTkFNRSxcbiAgU1RBVEVNRU5UX0JORl9GSUxFX05BTUUsXG4gIFRZUEVfUEFUVEVSTl9GSUxFX05BTUUsXG4gIFNZTUJPTF9QQVRURVJOX0ZJTEVfTkFNRSxcbiAgT1BFUkFUT1JfUEFUVEVSTl9GSUxFX05BTUVcbn07XG4iXSwibmFtZXMiOlsiTUVUQV9KU09OX0ZJTEVfTkFNRSIsIk9QRVJBVE9SX1BBVFRFUk5fRklMRV9OQU1FIiwiUkVBRE1FX01EX0ZJTEVfTkFNRSIsIlNUQVRFTUVOVF9CTkZfRklMRV9OQU1FIiwiU1lNQk9MX1BBVFRFUk5fRklMRV9OQU1FIiwiVEVSTV9CTkZfRklMRV9OQU1FIiwiVFlQRV9QQVRURVJOX0ZJTEVfTkFNRSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBR2FBLG1CQUFtQjtlQUFuQkE7O0lBTUFDLDBCQUEwQjtlQUExQkE7O0lBUEFDLG1CQUFtQjtlQUFuQkE7O0lBSUFDLHVCQUF1QjtlQUF2QkE7O0lBRUFDLHdCQUF3QjtlQUF4QkE7O0lBSEFDLGtCQUFrQjtlQUFsQkE7O0lBRUFDLHNCQUFzQjtlQUF0QkE7O0lBSWIsT0FRRTtlQVJGOzs7QUFUTyxJQUFNSixzQkFBc0I7QUFDNUIsSUFBTUYsc0JBQXNCO0FBRTVCLElBQU1LLHFCQUFxQjtBQUMzQixJQUFNRiwwQkFBMEI7QUFDaEMsSUFBTUcseUJBQXlCO0FBQy9CLElBQU1GLDJCQUEyQjtBQUNqQyxJQUFNSCw2QkFBNkI7SUFFMUMsV0FBZTtJQUNiQyxxQkFBQUE7SUFDQUYscUJBQUFBO0lBQ0FLLG9CQUFBQTtJQUNBRix5QkFBQUE7SUFDQUcsd0JBQUFBO0lBQ0FGLDBCQUFBQTtJQUNBSCw0QkFBQUE7QUFDRiJ9