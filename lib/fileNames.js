"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    META_JSON_FILE_NAME: function() {
        return META_JSON_FILE_NAME;
    },
    README_MD_FILE_NAME: function() {
        return README_MD_FILE_NAME;
    },
    STATEMENT_BNF_FILE_NAME: function() {
        return STATEMENT_BNF_FILE_NAME;
    },
    SYMBOL_PATTERN_FILE_NAME: function() {
        return SYMBOL_PATTERN_FILE_NAME;
    },
    TERM_BNF_FILE_NAME: function() {
        return TERM_BNF_FILE_NAME;
    },
    TYPE_BNF_FILE_NAME: function() {
        return TYPE_BNF_FILE_NAME;
    },
    TYPE_PATTERN_FILE_NAME: function() {
        return TYPE_PATTERN_FILE_NAME;
    },
    default: function() {
        return _default;
    }
});
var README_MD_FILE_NAME = "README.md";
var META_JSON_FILE_NAME = "meta.json";
var TYPE_BNF_FILE_NAME = "type.bnf";
var TERM_BNF_FILE_NAME = "term.bnf";
var STATEMENT_BNF_FILE_NAME = "statement.bnf";
var TYPE_PATTERN_FILE_NAME = "type.ptn";
var SYMBOL_PATTERN_FILE_NAME = "symbol.ptn";
var _default = {
    README_MD_FILE_NAME: README_MD_FILE_NAME,
    META_JSON_FILE_NAME: META_JSON_FILE_NAME,
    TYPE_BNF_FILE_NAME: TYPE_BNF_FILE_NAME,
    TERM_BNF_FILE_NAME: TERM_BNF_FILE_NAME,
    STATEMENT_BNF_FILE_NAME: STATEMENT_BNF_FILE_NAME,
    TYPE_PATTERN_FILE_NAME: TYPE_PATTERN_FILE_NAME,
    SYMBOL_PATTERN_FILE_NAME: SYMBOL_PATTERN_FILE_NAME
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maWxlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBSRUFETUVfTURfRklMRV9OQU1FID0gXCJSRUFETUUubWRcIjtcbmV4cG9ydCBjb25zdCBNRVRBX0pTT05fRklMRV9OQU1FID0gXCJtZXRhLmpzb25cIjtcblxuZXhwb3J0IGNvbnN0IFRZUEVfQk5GX0ZJTEVfTkFNRSA9IFwidHlwZS5ibmZcIjtcbmV4cG9ydCBjb25zdCBURVJNX0JORl9GSUxFX05BTUUgPSBcInRlcm0uYm5mXCI7XG5leHBvcnQgY29uc3QgU1RBVEVNRU5UX0JORl9GSUxFX05BTUUgPSBcInN0YXRlbWVudC5ibmZcIjtcbmV4cG9ydCBjb25zdCBUWVBFX1BBVFRFUk5fRklMRV9OQU1FID0gXCJ0eXBlLnB0blwiO1xuZXhwb3J0IGNvbnN0IFNZTUJPTF9QQVRURVJOX0ZJTEVfTkFNRSA9IFwic3ltYm9sLnB0blwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFJFQURNRV9NRF9GSUxFX05BTUUsXG4gIE1FVEFfSlNPTl9GSUxFX05BTUUsXG4gIFRZUEVfQk5GX0ZJTEVfTkFNRSxcbiAgVEVSTV9CTkZfRklMRV9OQU1FLFxuICBTVEFURU1FTlRfQk5GX0ZJTEVfTkFNRSxcbiAgVFlQRV9QQVRURVJOX0ZJTEVfTkFNRSxcbiAgU1lNQk9MX1BBVFRFUk5fRklMRV9OQU1FXG59O1xuIl0sIm5hbWVzIjpbIk1FVEFfSlNPTl9GSUxFX05BTUUiLCJSRUFETUVfTURfRklMRV9OQU1FIiwiU1RBVEVNRU5UX0JORl9GSUxFX05BTUUiLCJTWU1CT0xfUEFUVEVSTl9GSUxFX05BTUUiLCJURVJNX0JORl9GSUxFX05BTUUiLCJUWVBFX0JORl9GSUxFX05BTUUiLCJUWVBFX1BBVFRFUk5fRklMRV9OQU1FIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFHYUEsbUJBQW1CO2VBQW5CQTs7SUFEQUMsbUJBQW1CO2VBQW5CQTs7SUFLQUMsdUJBQXVCO2VBQXZCQTs7SUFFQUMsd0JBQXdCO2VBQXhCQTs7SUFIQUMsa0JBQWtCO2VBQWxCQTs7SUFEQUMsa0JBQWtCO2VBQWxCQTs7SUFHQUMsc0JBQXNCO2VBQXRCQTs7SUFHYixPQVFFO2VBUkY7OztBQVRPLElBQU1MLHNCQUFzQjtBQUM1QixJQUFNRCxzQkFBc0I7QUFFNUIsSUFBTUsscUJBQXFCO0FBQzNCLElBQU1ELHFCQUFxQjtBQUMzQixJQUFNRiwwQkFBMEI7QUFDaEMsSUFBTUkseUJBQXlCO0FBQy9CLElBQU1ILDJCQUEyQjtJQUV4QyxXQUFlO0lBQ2JGLHFCQUFBQTtJQUNBRCxxQkFBQUE7SUFDQUssb0JBQUFBO0lBQ0FELG9CQUFBQTtJQUNBRix5QkFBQUE7SUFDQUksd0JBQUFBO0lBQ0FILDBCQUFBQTtBQUNGIn0=