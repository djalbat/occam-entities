"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = removeProjectEntries;
exports.removeEntry = removeEntry;
var _fsExtra = require("fs-extra");
var _necessary = require("necessary");
var _pathMaps = require("./utilities/pathMaps");
var concatenatePaths = _necessary.pathUtilities.concatenatePaths, checkEntryExists = _necessary.fileSystemUtilities.checkEntryExists, isEntryDirectory = _necessary.fileSystemUtilities.isEntryDirectory, isDirectoryEmpty = _necessary.fileSystemUtilities.isDirectoryEmpty;
function removeProjectEntries(projectsDirectoryPath, json, callback) {
    var pathMaps = json.pathMaps, sourceEntryPaths = [], targetEntryPaths = [];
    (0, _pathMaps).asynchronousForEach(pathMaps, function(sourceEntryPath, targetEntryPath, entryDirectory, next, done, index) {
        removeEntry(sourceEntryPath, targetEntryPath, projectsDirectoryPath, function(sourceEntryPath, targetEntryPath) {
            sourceEntryPaths.push(sourceEntryPath);
            targetEntryPaths.push(targetEntryPath);
            next();
        });
    }, function() {
        var json = {
            sourceEntryPaths: sourceEntryPaths,
            targetEntryPaths: targetEntryPaths
        };
        callback(json);
    });
}
function removeEntry(sourceEntryPath, targetEntryPath, projectsDirectoryPath, callback) {
    if (sourceEntryPath === targetEntryPath) {
        callback(sourceEntryPath, targetEntryPath);
        return;
    }
    var absoluteSourceEntryPath = concatenatePaths(projectsDirectoryPath, sourceEntryPath), entryExists = checkEntryExists(absoluteSourceEntryPath);
    if (!entryExists) {
        targetEntryPath = null;
        callback(sourceEntryPath, targetEntryPath);
        return;
    }
    var entryDirectory = isEntryDirectory(absoluteSourceEntryPath);
    entryDirectory ? removeDirectory(sourceEntryPath, projectsDirectoryPath, callback) : removeFile(sourceEntryPath, projectsDirectoryPath, callback);
}
function removeFile(sourceEntryPath, projectsDirectoryPath, callback) {
    var absoluteSourceEntryPath = concatenatePaths(projectsDirectoryPath, sourceEntryPath);
    (0, _fsExtra).remove(absoluteSourceEntryPath, function(error) {
        var targetEntryPath = null;
        if (error) {
            sourceEntryPath = null;
            callback(sourceEntryPath, targetEntryPath);
            return;
        }
        callback(sourceEntryPath, targetEntryPath);
    });
}
function removeDirectory(sourceEntryPath, projectsDirectoryPath, callback) {
    var absoluteSourceEntryPath = concatenatePaths(projectsDirectoryPath, sourceEntryPath), sourceDirectoryEmpty = isDirectoryEmpty(absoluteSourceEntryPath);
    if (!sourceDirectoryEmpty) {
        var targetEntryPath = null;
        sourceEntryPath = null;
        callback(sourceEntryPath, targetEntryPath);
        return;
    }
    (0, _fsExtra).remove(absoluteSourceEntryPath, function(error) {
        var targetEntryPath = null;
        if (error) {
            sourceEntryPath = null;
        }
        callback(sourceEntryPath, targetEntryPath);
    });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZW1vdmVQcm9qZWN0RW50cmllcy5qcyJdLCJuYW1lcyI6WyJyZW1vdmUiLCJwYXRoVXRpbGl0aWVzIiwiZmlsZVN5c3RlbVV0aWxpdGllcyIsImFzeW5jaHJvbm91c0ZvckVhY2giLCJjb25jYXRlbmF0ZVBhdGhzIiwiY2hlY2tFbnRyeUV4aXN0cyIsImlzRW50cnlEaXJlY3RvcnkiLCJpc0RpcmVjdG9yeUVtcHR5IiwicmVtb3ZlUHJvamVjdEVudHJpZXMiLCJwcm9qZWN0c0RpcmVjdG9yeVBhdGgiLCJqc29uIiwiY2FsbGJhY2siLCJwYXRoTWFwcyIsInNvdXJjZUVudHJ5UGF0aHMiLCJ0YXJnZXRFbnRyeVBhdGhzIiwic291cmNlRW50cnlQYXRoIiwidGFyZ2V0RW50cnlQYXRoIiwiZW50cnlEaXJlY3RvcnkiLCJuZXh0IiwiZG9uZSIsImluZGV4IiwicmVtb3ZlRW50cnkiLCJwdXNoIiwiYWJzb2x1dGVTb3VyY2VFbnRyeVBhdGgiLCJlbnRyeUV4aXN0cyIsInJlbW92ZURpcmVjdG9yeSIsInJlbW92ZUZpbGUiLCJlcnJvciIsInNvdXJjZURpcmVjdG9yeUVtcHR5Il0sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7O2tCQVVZLG9CQUFvQjtRQTBCNUIsV0FBVyxHQUFYLFdBQVc7QUFsQ0osR0FBVSxDQUFWLFFBQVU7QUFDa0IsR0FBVyxDQUFYLFVBQVc7QUFFMUIsR0FBc0IsQ0FBdEIsU0FBc0I7QUFFMUQsR0FBSyxDQUFHLGdCQUFnQixHQUoyQixVQUFXLGVBSXRELGdCQUFnQixFQUNoQixnQkFBZ0IsR0FMMkIsVUFBVyxxQkFLdEQsZ0JBQWdCLEVBQUUsZ0JBQWdCLEdBTFMsVUFBVyxxQkFLcEMsZ0JBQWdCLEVBQUUsZ0JBQWdCLEdBTFQsVUFBVyxxQkFLbEIsZ0JBQWdCO1NBRXBDLG9CQUFvQixDQUFDLHFCQUFxQixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQztJQUNuRixHQUFLLENBQUcsUUFBUSxHQUFLLElBQUksQ0FBakIs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QUUsZUFBZTtJQUMzQyxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyByZW1vdmUgfSBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IHBhdGhVdGlsaXRpZXMsIGZpbGVTeXN0ZW1VdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCB7IGFzeW5jaHJvbm91c0ZvckVhY2ggfSBmcm9tIFwiLi91dGlsaXRpZXMvcGF0aE1hcHNcIjtcblxuY29uc3QgeyBjb25jYXRlbmF0ZVBhdGhzIH0gPSBwYXRoVXRpbGl0aWVzLFxuICAgICAgeyBjaGVja0VudHJ5RXhpc3RzLCBpc0VudHJ5RGlyZWN0b3J5LCBpc0RpcmVjdG9yeUVtcHR5IH0gPSBmaWxlU3lzdGVtVXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVQcm9qZWN0RW50cmllcyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGpzb24sIGNhbGxiYWNrKSB7XG4gIGNvbnN0IHsgcGF0aE1hcHMgfSA9IGpzb24sXG4gICAgICAgIHNvdXJjZUVudHJ5UGF0aHMgPSBbXSxcblx0XHQgICAgdGFyZ2V0RW50cnlQYXRocyA9IFtdO1xuXG4gIGFzeW5jaHJvbm91c0ZvckVhY2goXG4gICAgcGF0aE1hcHMsXG4gICAgKHNvdXJjZUVudHJ5UGF0aCwgdGFyZ2V0RW50cnlQYXRoLCBlbnRyeURpcmVjdG9yeSwgbmV4dCwgZG9uZSwgaW5kZXgpID0+IHtcbiAgICAgIHJlbW92ZUVudHJ5KHNvdXJjZUVudHJ5UGF0aCwgdGFyZ2V0RW50cnlQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIChzb3VyY2VFbnRyeVBhdGgsIHRhcmdldEVudHJ5UGF0aCkgPT4ge1xuICAgICAgICBzb3VyY2VFbnRyeVBhdGhzLnB1c2goc291cmNlRW50cnlQYXRoKTtcbiAgICAgICAgdGFyZ2V0RW50cnlQYXRocy5wdXNoKHRhcmdldEVudHJ5UGF0aCk7XG5cbiAgICAgICAgbmV4dCgpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICAoKSA9PiB7XG4gICAgXHRjb25zdCBqc29uID0ge1xuICAgICAgICBzb3VyY2VFbnRyeVBhdGhzLFxuICAgICAgICB0YXJnZXRFbnRyeVBhdGhzXG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKGpzb24pO1xuICAgIH1cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUVudHJ5KHNvdXJjZUVudHJ5UGF0aCwgdGFyZ2V0RW50cnlQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGNhbGxiYWNrKSB7XG4gIGlmIChzb3VyY2VFbnRyeVBhdGggPT09IHRhcmdldEVudHJ5UGF0aCkge1xuICAgIGNhbGxiYWNrKHNvdXJjZUVudHJ5UGF0aCwgdGFyZ2V0RW50cnlQYXRoKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGFic29sdXRlU291cmNlRW50cnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHNvdXJjZUVudHJ5UGF0aCksXG4gICAgICAgIGVudHJ5RXhpc3RzID0gY2hlY2tFbnRyeUV4aXN0cyhhYnNvbHV0ZVNvdXJjZUVudHJ5UGF0aCk7XG5cbiAgaWYgKCFlbnRyeUV4aXN0cykge1xuICAgIHRhcmdldEVudHJ5UGF0aCA9IG51bGw7XG5cbiAgICBjYWxsYmFjayhzb3VyY2VFbnRyeVBhdGgsIHRhcmdldEVudHJ5UGF0aCk7XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBlbnRyeURpcmVjdG9yeSA9IGlzRW50cnlEaXJlY3RvcnkoYWJzb2x1dGVTb3VyY2VFbnRyeVBhdGgpO1xuXG4gIGVudHJ5RGlyZWN0b3J5ID9cbiAgICByZW1vdmVEaXJlY3Rvcnkoc291cmNlRW50cnlQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGNhbGxiYWNrKSA6XG4gICAgICByZW1vdmVGaWxlKHNvdXJjZUVudHJ5UGF0aCwgcHJvamVjdHNEaXJlY3RvcnlQYXRoLCBjYWxsYmFjayk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUZpbGUoc291cmNlRW50cnlQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGFic29sdXRlU291cmNlRW50cnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHNvdXJjZUVudHJ5UGF0aCk7XG5cbiAgcmVtb3ZlKGFic29sdXRlU291cmNlRW50cnlQYXRoLCAoZXJyb3IpID0+IHtcbiAgICBjb25zdCB0YXJnZXRFbnRyeVBhdGggPSBudWxsO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBzb3VyY2VFbnRyeVBhdGggPSBudWxsO1xuXG4gICAgICBjYWxsYmFjayhzb3VyY2VFbnRyeVBhdGgsIHRhcmdldEVudHJ5UGF0aCk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjYWxsYmFjayhzb3VyY2VFbnRyeVBhdGgsIHRhcmdldEVudHJ5UGF0aCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZW1vdmVEaXJlY3Rvcnkoc291cmNlRW50cnlQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGFic29sdXRlU291cmNlRW50cnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHNvdXJjZUVudHJ5UGF0aCksXG4gICAgICAgIHNvdXJjZURpcmVjdG9yeUVtcHR5ID0gaXNEaXJlY3RvcnlFbXB0eShhYnNvbHV0ZVNvdXJjZUVudHJ5UGF0aCk7XG5cbiAgaWYgKCFzb3VyY2VEaXJlY3RvcnlFbXB0eSkge1xuICAgIGNvbnN0IHRhcmdldEVudHJ5UGF0aCA9IG51bGw7XG5cbiAgICBzb3VyY2VFbnRyeVBhdGggPSBudWxsO1xuXG4gICAgY2FsbGJhY2soc291cmNlRW50cnlQYXRoLCB0YXJnZXRFbnRyeVBhdGgpO1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmVtb3ZlKGFic29sdXRlU291cmNlRW50cnlQYXRoLCAoZXJyb3IpID0+IHtcbiAgICBjb25zdCB0YXJnZXRFbnRyeVBhdGggPSBudWxsO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBzb3VyY2VFbnRyeVBhdGggPSBudWxsO1xuICAgIH1cblxuICAgIGNhbGxiYWNrKHNvdXJjZUVudHJ5UGF0aCwgdGFyZ2V0RW50cnlQYXRoKTtcbiAgfSk7XG59XG4iXX0=