"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = removeProjectEntries;
exports.removeEntry = removeEntry;
var _fsExtra = require("fs-extra");
var _necessary = require("necessary");
var _pathMaps = require("./utilities/pathMaps");
var concatenatePaths = _necessary.pathUtilities.concatenatePaths, checkEntryExists = _necessary.fileSystemUtilities.checkEntryExists, isEntryDirectory = _necessary.fileSystemUtilities.isEntryDirectory, isDirectoryEmpty = _necessary.fileSystemUtilities.isDirectoryEmpty;
function removeProjectEntries(projectsDirectoryPath, json, callback) {
    var pathMaps = json.pathMaps, targetPaths = [];
    (0, _pathMaps).asynchronousForEach(pathMaps, function(sourcePath, targetPath, directory, next, done, index) {
        removeEntry(sourcePath, targetPath, projectsDirectoryPath, function(targetPath1) {
            targetPaths.push(targetPath1);
            next();
        });
    }, function() {
        var json1 = targetPaths; ///
        callback(json1);
    });
}
function removeEntry(sourcePath, targetPath, projectsDirectoryPath, callback) {
    if (sourcePath === targetPath) {
        callback(targetPath);
        return;
    }
    var absoluteSourcePath = concatenatePaths(projectsDirectoryPath, sourcePath), entryExists = checkEntryExists(absoluteSourcePath);
    if (!entryExists) {
        targetPath = null;
        callback(targetPath);
        return;
    }
    var entryDirectory = isEntryDirectory(absoluteSourcePath);
    entryDirectory ? removeDirectory(sourcePath, projectsDirectoryPath, callback) : removeFile(sourcePath, projectsDirectoryPath, callback);
}
function removeFile(sourcePath, projectsDirectoryPath, callback) {
    var absoluteSourcePath = concatenatePaths(projectsDirectoryPath, sourcePath);
    (0, _fsExtra).remove(absoluteSourcePath, function(error) {
        var success = !error, targetPath = success ? null : sourcePath; ///
        callback(targetPath);
    });
}
function removeDirectory(sourcePath, projectsDirectoryPath, callback) {
    var absoluteSourcePath = concatenatePaths(projectsDirectoryPath, sourcePath), directoryEmpty = isDirectoryEmpty(absoluteSourcePath);
    if (!directoryEmpty) {
        var targetPath = sourcePath; ///
        callback(targetPath);
        return;
    }
    (0, _fsExtra).remove(absoluteSourcePath, function(error) {
        var success = !error, targetPath = success ? null : sourcePath; ///
        callback(targetPath);
    });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZW1vdmVQcm9qZWN0RW50cmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcmVtb3ZlIH0gZnJvbSBcImZzLWV4dHJhXCI7XG5pbXBvcnQgeyBwYXRoVXRpbGl0aWVzLCBmaWxlU3lzdGVtVXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5pbXBvcnQgeyBhc3luY2hyb25vdXNGb3JFYWNoIH0gZnJvbSBcIi4vdXRpbGl0aWVzL3BhdGhNYXBzXCI7XG5cbmNvbnN0IHsgY29uY2F0ZW5hdGVQYXRocyB9ID0gcGF0aFV0aWxpdGllcyxcbiAgICAgIHsgY2hlY2tFbnRyeUV4aXN0cywgaXNFbnRyeURpcmVjdG9yeSwgaXNEaXJlY3RvcnlFbXB0eSB9ID0gZmlsZVN5c3RlbVV0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVtb3ZlUHJvamVjdEVudHJpZXMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBqc29uLCBjYWxsYmFjaykge1xuICBjb25zdCB7IHBhdGhNYXBzIH0gPSBqc29uLFxuXHRcdCAgICB0YXJnZXRQYXRocyA9IFtdO1xuXG4gIGFzeW5jaHJvbm91c0ZvckVhY2goXG4gICAgcGF0aE1hcHMsXG4gICAgKHNvdXJjZVBhdGgsIHRhcmdldFBhdGgsIGRpcmVjdG9yeSwgbmV4dCwgZG9uZSwgaW5kZXgpID0+IHtcbiAgICAgIHJlbW92ZUVudHJ5KHNvdXJjZVBhdGgsIHRhcmdldFBhdGgsIHByb2plY3RzRGlyZWN0b3J5UGF0aCwgKHRhcmdldFBhdGgpID0+IHtcbiAgICAgICAgdGFyZ2V0UGF0aHMucHVzaCh0YXJnZXRQYXRoKTtcblxuICAgICAgICBuZXh0KCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgICgpID0+IHtcbiAgICBcdGNvbnN0IGpzb24gPSB0YXJnZXRQYXRoczsgLy8vXG5cbiAgICAgIGNhbGxiYWNrKGpzb24pO1xuICAgIH1cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUVudHJ5KHNvdXJjZVBhdGgsIHRhcmdldFBhdGgsIHByb2plY3RzRGlyZWN0b3J5UGF0aCwgY2FsbGJhY2spIHtcbiAgaWYgKHNvdXJjZVBhdGggPT09IHRhcmdldFBhdGgpIHtcbiAgICBjYWxsYmFjayh0YXJnZXRQYXRoKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGFic29sdXRlU291cmNlUGF0aCA9IGNvbmNhdGVuYXRlUGF0aHMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBzb3VyY2VQYXRoKSxcbiAgICAgICAgZW50cnlFeGlzdHMgPSBjaGVja0VudHJ5RXhpc3RzKGFic29sdXRlU291cmNlUGF0aCk7XG5cbiAgaWYgKCFlbnRyeUV4aXN0cykge1xuICAgIHRhcmdldFBhdGggPSBudWxsO1xuXG4gICAgY2FsbGJhY2sodGFyZ2V0UGF0aCk7XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBlbnRyeURpcmVjdG9yeSA9IGlzRW50cnlEaXJlY3RvcnkoYWJzb2x1dGVTb3VyY2VQYXRoKTtcblxuICBlbnRyeURpcmVjdG9yeSA/XG4gICAgcmVtb3ZlRGlyZWN0b3J5KHNvdXJjZVBhdGgsIHByb2plY3RzRGlyZWN0b3J5UGF0aCwgY2FsbGJhY2spIDpcbiAgICAgIHJlbW92ZUZpbGUoc291cmNlUGF0aCwgcHJvamVjdHNEaXJlY3RvcnlQYXRoLCBjYWxsYmFjayk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUZpbGUoc291cmNlUGF0aCwgcHJvamVjdHNEaXJlY3RvcnlQYXRoLCBjYWxsYmFjaykge1xuICBjb25zdCBhYnNvbHV0ZVNvdXJjZVBhdGggPSBjb25jYXRlbmF0ZVBhdGhzKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgc291cmNlUGF0aCk7XG5cbiAgcmVtb3ZlKGFic29sdXRlU291cmNlUGF0aCwgKGVycm9yKSA9PiB7XG4gICAgY29uc3Qgc3VjY2VzcyA9ICFlcnJvcixcbiAgICAgICAgICB0YXJnZXRQYXRoID0gc3VjY2VzcyA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VQYXRoOyAgLy8vXG5cbiAgICBjYWxsYmFjayh0YXJnZXRQYXRoKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZURpcmVjdG9yeShzb3VyY2VQYXRoLCBwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGFic29sdXRlU291cmNlUGF0aCA9IGNvbmNhdGVuYXRlUGF0aHMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBzb3VyY2VQYXRoKSxcbiAgICAgICAgZGlyZWN0b3J5RW1wdHkgPSBpc0RpcmVjdG9yeUVtcHR5KGFic29sdXRlU291cmNlUGF0aCk7XG5cbiAgaWYgKCFkaXJlY3RvcnlFbXB0eSkge1xuICAgIGNvbnN0IHRhcmdldFBhdGggPSBzb3VyY2VQYXRoOyAgLy8vXG5cbiAgICBjYWxsYmFjayh0YXJnZXRQYXRoKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHJlbW92ZShhYnNvbHV0ZVNvdXJjZVBhdGgsIChlcnJvcikgPT4ge1xuICAgIGNvbnN0IHN1Y2Nlc3MgPSAhZXJyb3IsXG4gICAgICAgICAgdGFyZ2V0UGF0aCA9IHN1Y2Nlc3MgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VQYXRoOyAvLy9cblxuICAgIGNhbGxiYWNrKHRhcmdldFBhdGgpO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7O2tCQVVZLG9CQUFvQjtRQXFCNUIsV0FBVyxHQUFYLFdBQVc7QUE3QkosR0FBVSxDQUFWLFFBQVU7QUFDa0IsR0FBVyxDQUFYLFVBQVc7QUFFMUIsR0FBc0IsQ0FBdEIsU0FBc0I7QUFFMUQsR0FBSyxDQUFHLGdCQUFnQixHQUoyQixVQUFXLGVBSXRELGdCQUFnQixFQUNoQixnQkFBZ0IsR0FMMkIsVUFBVyxx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