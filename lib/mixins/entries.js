"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function getFile(filePath) {
    return this.entries.getFile(filePath);
}
function getBNF() {
    return this.entries.getBNF();
}
function getFiles() {
    return this.entries.getFiles();
}
function getTermBNF() {
    return this.entries.getTermBNF();
}
function getVersion() {
    return this.entries.getVersion();
}
function getPattern() {
    return this.entries.getPattern();
}
function getFilePaths() {
    return this.entries.getFilePaths();
}
function getRepository() {
    return this.entries.getRepository();
}
function getReadmeFile() {
    return this.entries.getReadmeFile();
}
function getTypePattern() {
    return this.entries.getTypePattern();
}
function getStatementBNF() {
    return this.entries.getStatementBNF();
}
function getDependencies() {
    return this.entries.getDependencies();
}
function getMetaJSONFile() {
    return this.entries.getMetaJSONFile();
}
function getSymbolPattern() {
    return this.entries.getSymbolPattern();
}
function getFlorenceFiles() {
    return this.entries.getFlorenceFiles();
}
function getDirectoryPaths() {
    return this.entries.getDirectoryPaths();
}
function getOperatorPattern() {
    return this.entries.getOperatorPattern();
}
function getDependencyNames() {
    return this.entries.getDependencyNames();
}
function getMetastatementBNF() {
    return this.entries.getMetastatementBNF();
}
function getCustomGrammarBNFFiles() {
    return this.entries.getCustomGrammarBNFFiles();
}
function getCustomGrammarPatternFiles() {
    return this.entries.getCustomGrammarPatternFiles();
}
var entriesMixins = {
    getFile: getFile,
    getBNF: getBNF,
    getFiles: getFiles,
    getTermBNF: getTermBNF,
    getVersion: getVersion,
    getPattern: getPattern,
    getFilePaths: getFilePaths,
    getRepository: getRepository,
    getReadmeFile: getReadmeFile,
    getTypePattern: getTypePattern,
    getStatementBNF: getStatementBNF,
    getDependencies: getDependencies,
    getMetaJSONFile: getMetaJSONFile,
    getSymbolPattern: getSymbolPattern,
    getFlorenceFiles: getFlorenceFiles,
    getDirectoryPaths: getDirectoryPaths,
    getOperatorPattern: getOperatorPattern,
    getDependencyNames: getDependencyNames,
    getMetastatementBNF: getMetastatementBNF,
    getCustomGrammarBNFFiles: getCustomGrammarBNFFiles,
    getCustomGrammarPatternFiles: getCustomGrammarPatternFiles
};
var _default = entriesMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZW50cmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gZ2V0RmlsZShmaWxlUGF0aCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldEZpbGUoZmlsZVBhdGgpOyB9XG5cbmZ1bmN0aW9uIGdldEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXRGaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldFRlcm1CTkYoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VGVybUJORigpOyB9XG5cbmZ1bmN0aW9uIGdldFZlcnNpb24oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VmVyc2lvbigpOyB9XG5cbmZ1bmN0aW9uIGdldFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0UGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZpbGVQYXRocygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlUGF0aHMoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZXBvc2l0b3J5KCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlcG9zaXRvcnkoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZWFkbWVGaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlYWRtZUZpbGUoKTsgfVxuXG5mdW5jdGlvbiBnZXRUeXBlUGF0dGVybigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRUeXBlUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldFN0YXRlbWVudEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRTdGF0ZW1lbnRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXREZXBlbmRlbmNpZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RGVwZW5kZW5jaWVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0TWV0YUpTT05GaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE1ldGFKU09ORmlsZSgpOyB9XG5cbmZ1bmN0aW9uIGdldFN5bWJvbFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0U3ltYm9sUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZsb3JlbmNlRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RmxvcmVuY2VGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldERpcmVjdG9yeVBhdGhzKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldERpcmVjdG9yeVBhdGhzKCk7IH1cblxuZnVuY3Rpb24gZ2V0T3BlcmF0b3JQYXR0ZXJuKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE9wZXJhdG9yUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldERlcGVuZGVuY3lOYW1lcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXREZXBlbmRlbmN5TmFtZXMoKTsgfVxuXG5mdW5jdGlvbiBnZXRNZXRhc3RhdGVtZW50Qk5GKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE1ldGFzdGF0ZW1lbnRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzKCk7IH1cblxuXG5jb25zdCBlbnRyaWVzTWl4aW5zID0ge1xuICBnZXRGaWxlLFxuICBnZXRCTkYsXG4gIGdldEZpbGVzLFxuICBnZXRUZXJtQk5GLFxuICBnZXRWZXJzaW9uLFxuICBnZXRQYXR0ZXJuLFxuICBnZXRGaWxlUGF0aHMsXG4gIGdldFJlcG9zaXRvcnksXG4gIGdldFJlYWRtZUZpbGUsXG4gIGdldFR5cGVQYXR0ZXJuLFxuICBnZXRTdGF0ZW1lbnRCTkYsXG4gIGdldERlcGVuZGVuY2llcyxcbiAgZ2V0TWV0YUpTT05GaWxlLFxuICBnZXRTeW1ib2xQYXR0ZXJuLFxuICBnZXRGbG9yZW5jZUZpbGVzLFxuICBnZXREaXJlY3RvcnlQYXRocyxcbiAgZ2V0T3BlcmF0b3JQYXR0ZXJuLFxuICBnZXREZXBlbmRlbmN5TmFtZXMsXG4gIGdldE1ldGFzdGF0ZW1lbnRCTkYsXG4gIGdldEN1c3RvbUdyYW1tYXJCTkZGaWxlcyxcbiAgZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlc1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZW50cmllc01peGlucztcbiJdLCJuYW1lcyI6WyJnZXRGaWxlIiwiZmlsZVBhdGgiLCJlbnRyaWVzIiwiZ2V0Qk5GIiwiZ2V0RmlsZXMiLCJnZXRUZXJtQk5GIiwiZ2V0VmVyc2lvbiIsImdldFBhdHRlcm4iLCJnZXRGaWxlUGF0aHMiLCJnZXRSZXBvc2l0b3J5IiwiZ2V0UmVhZG1lRmlsZSIsImdldFR5cGVQYXR0ZXJuIiwiZ2V0U3RhdGVtZW50Qk5GIiwiZ2V0RGVwZW5kZW5jaWVzIiwiZ2V0TWV0YUpTT05GaWxlIiwiZ2V0U3ltYm9sUGF0dGVybiIsImdldEZsb3JlbmNlRmlsZXMiLCJnZXREaXJlY3RvcnlQYXRocyIsImdldE9wZXJhdG9yUGF0dGVybiIsImdldERlcGVuZGVuY3lOYW1lcyIsImdldE1ldGFzdGF0ZW1lbnRCTkYiLCJnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMiLCJnZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzIiwiZW50cmllc01peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBcUVBOzs7ZUFBQTs7O0FBbkVBLFNBQVNBLFFBQVFDLFFBQVE7SUFBSSxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDRixPQUFPLENBQUNDO0FBQVc7QUFFcEUsU0FBU0U7SUFBVyxPQUFPLElBQUksQ0FBQ0QsT0FBTyxDQUFDQyxNQUFNO0FBQUk7QUFFbEQsU0FBU0M7SUFBYSxPQUFPLElBQUksQ0FBQ0YsT0FBTyxDQUFDRSxRQUFRO0FBQUk7QUFFdEQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDRyxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSSxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDSyxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBaUIsT0FBTyxJQUFJLENBQUNOLE9BQU8sQ0FBQ00sWUFBWTtBQUFJO0FBRTlELFNBQVNDO0lBQWtCLE9BQU8sSUFBSSxDQUFDUCxPQUFPLENBQUNPLGFBQWE7QUFBSTtBQUVoRSxTQUFTQztJQUFrQixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDUSxhQUFhO0FBQUk7QUFFaEUsU0FBU0M7SUFBbUIsT0FBTyxJQUFJLENBQUNULE9BQU8sQ0FBQ1MsY0FBYztBQUFJO0FBRWxFLFNBQVNDO0lBQW9CLE9BQU8sSUFBSSxDQUFDVixPQUFPLENBQUNVLGVBQWU7QUFBSTtBQUVwRSxTQUFTQztJQUFvQixPQUFPLElBQUksQ0FBQ1gsT0FBTyxDQUFDVyxlQUFlO0FBQUk7QUFFcEUsU0FBU0M7SUFBb0IsT0FBTyxJQUFJLENBQUNaLE9BQU8sQ0FBQ1ksZUFBZTtBQUFJO0FBRXBFLFNBQVNDO0lBQXFCLE9BQU8sSUFBSSxDQUFDYixPQUFPLENBQUNhLGdCQUFnQjtBQUFJO0FBRXRFLFNBQVNDO0lBQXFCLE9BQU8sSUFBSSxDQUFDZCxPQUFPLENBQUNjLGdCQUFnQjtBQUFJO0FBRXRFLFNBQVNDO0lBQXNCLE9BQU8sSUFBSSxDQUFDZixPQUFPLENBQUNlLGlCQUFpQjtBQUFJO0FBRXhFLFNBQVNDO0lBQXVCLE9BQU8sSUFBSSxDQUFDaEIsT0FBTyxDQUFDZ0Isa0JBQWtCO0FBQUk7QUFFMUUsU0FBU0M7SUFBdUIsT0FBTyxJQUFJLENBQUNqQixPQUFPLENBQUNpQixrQkFBa0I7QUFBSTtBQUUxRSxTQUFTQztJQUF3QixPQUFPLElBQUksQ0FBQ2xCLE9BQU8sQ0FBQ2tCLG1CQUFtQjtBQUFJO0FBRTVFLFNBQVNDO0lBQTZCLE9BQU8sSUFBSSxDQUFDbkIsT0FBTyxDQUFDbUIsd0JBQXdCO0FBQUk7QUFFdEYsU0FBU0M7SUFBaUMsT0FBTyxJQUFJLENBQUNwQixPQUFPLENBQUNvQiw0QkFBNEI7QUFBSTtBQUc5RixJQUFNQyxnQkFBZ0I7SUFDcEJ2QixTQUFBQTtJQUNBRyxRQUFBQTtJQUNBQyxVQUFBQTtJQUNBQyxZQUFBQTtJQUNBQyxZQUFBQTtJQUNBQyxZQUFBQTtJQUNBQyxjQUFBQTtJQUNBQyxlQUFBQTtJQUNBQyxlQUFBQTtJQUNBQyxnQkFBQUE7SUFDQUMsaUJBQUFBO0lBQ0FDLGlCQUFBQTtJQUNBQyxpQkFBQUE7SUFDQUMsa0JBQUFBO0lBQ0FDLGtCQUFBQTtJQUNBQyxtQkFBQUE7SUFDQUMsb0JBQUFBO0lBQ0FDLG9CQUFBQTtJQUNBQyxxQkFBQUE7SUFDQUMsMEJBQUFBO0lBQ0FDLDhCQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==