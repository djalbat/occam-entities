"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function getFile(filePath) {
    return this.entries.getFile(filePath);
}
function getBNF() {
    return this.entries.getBNF();
}
function getFiles() {
    return this.entries.getFiles();
}
function getTermBNF() {
    return this.entries.getTermBNF();
}
function getVersion() {
    return this.entries.getVersion();
}
function getPattern() {
    return this.entries.getPattern();
}
function getFilePaths() {
    return this.entries.getFilePaths();
}
function getRepository() {
    return this.entries.getRepository();
}
function getReadmeFile() {
    return this.entries.getReadmeFile();
}
function getTypePattern() {
    return this.entries.getTypePattern();
}
function getStatementBNF() {
    return this.entries.getStatementBNF();
}
function getDependencies() {
    return this.entries.getDependencies();
}
function getMetaJSONFile() {
    return this.entries.getMetaJSONFile();
}
function getSymbolPattern() {
    return this.entries.getSymbolPattern();
}
function getFlorenceFiles() {
    return this.entries.getFlorenceFiles();
}
function getDirectoryPaths() {
    return this.entries.getDirectoryPaths();
}
function getOperatorPattern() {
    return this.entries.getOperatorPattern();
}
function getDependencyNames() {
    return this.entries.getDependencyNames();
}
function getMetastatementBNF() {
    return this.entries.getMetastatementBNF();
}
function getCustomGrammarBNFFiles() {
    return this.entries.getCustomGrammarBNFFiles();
}
function getCustomGrammarPatternFiles() {
    return this.entries.getCustomGrammarPatternFiles();
}
var entriesMixins = {
    getFile: getFile,
    getBNF: getBNF,
    getFiles: getFiles,
    getTermBNF: getTermBNF,
    getVersion: getVersion,
    getPattern: getPattern,
    getFilePaths: getFilePaths,
    getRepository: getRepository,
    getReadmeFile: getReadmeFile,
    getTypePattern: getTypePattern,
    getStatementBNF: getStatementBNF,
    getDependencies: getDependencies,
    getMetaJSONFile: getMetaJSONFile,
    getSymbolPattern: getSymbolPattern,
    getFlorenceFiles: getFlorenceFiles,
    getDirectoryPaths: getDirectoryPaths,
    getOperatorPattern: getOperatorPattern,
    getDependencyNames: getDependencyNames,
    getMetastatementBNF: getMetastatementBNF,
    getCustomGrammarBNFFiles: getCustomGrammarBNFFiles,
    getCustomGrammarPatternFiles: getCustomGrammarPatternFiles
};
var _default = entriesMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZW50cmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gZ2V0RmlsZShmaWxlUGF0aCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldEZpbGUoZmlsZVBhdGgpOyB9XG5cbmZ1bmN0aW9uIGdldEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXRGaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldFRlcm1CTkYoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VGVybUJORigpOyB9XG5cbmZ1bmN0aW9uIGdldFZlcnNpb24oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VmVyc2lvbigpOyB9XG5cbmZ1bmN0aW9uIGdldFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0UGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZpbGVQYXRocygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlUGF0aHMoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZXBvc2l0b3J5KCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlcG9zaXRvcnkoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZWFkbWVGaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlYWRtZUZpbGUoKTsgfVxuXG5mdW5jdGlvbiBnZXRUeXBlUGF0dGVybigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRUeXBlUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldFN0YXRlbWVudEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRTdGF0ZW1lbnRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXREZXBlbmRlbmNpZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RGVwZW5kZW5jaWVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0TWV0YUpTT05GaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE1ldGFKU09ORmlsZSgpOyB9XG5cbmZ1bmN0aW9uIGdldFN5bWJvbFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0U3ltYm9sUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZsb3JlbmNlRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RmxvcmVuY2VGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldERpcmVjdG9yeVBhdGhzKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldERpcmVjdG9yeVBhdGhzKCk7IH1cblxuZnVuY3Rpb24gZ2V0T3BlcmF0b3JQYXR0ZXJuKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE9wZXJhdG9yUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldERlcGVuZGVuY3lOYW1lcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXREZXBlbmRlbmN5TmFtZXMoKTsgfVxuXG5mdW5jdGlvbiBnZXRNZXRhc3RhdGVtZW50Qk5GKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE1ldGFzdGF0ZW1lbnRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzKCk7IH1cblxuXG5jb25zdCBlbnRyaWVzTWl4aW5zID0ge1xuICBnZXRGaWxlLFxuICBnZXRCTkYsXG4gIGdldEZpbGVzLFxuICBnZXRUZXJtQk5GLFxuICBnZXRWZXJzaW9uLFxuICBnZXRQYXR0ZXJuLFxuICBnZXRGaWxlUGF0aHMsXG4gIGdldFJlcG9zaXRvcnksXG4gIGdldFJlYWRtZUZpbGUsXG4gIGdldFR5cGVQYXR0ZXJuLFxuICBnZXRTdGF0ZW1lbnRCTkYsXG4gIGdldERlcGVuZGVuY2llcyxcbiAgZ2V0TWV0YUpTT05GaWxlLFxuICBnZXRTeW1ib2xQYXR0ZXJuLFxuICBnZXRGbG9yZW5jZUZpbGVzLFxuICBnZXREaXJlY3RvcnlQYXRocyxcbiAgZ2V0T3BlcmF0b3JQYXR0ZXJuLFxuICBnZXREZXBlbmRlbmN5TmFtZXMsXG4gIGdldE1ldGFzdGF0ZW1lbnRCTkYsXG4gIGdldEN1c3RvbUdyYW1tYXJCTkZGaWxlcyxcbiAgZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlc1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZW50cmllc01peGlucztcbiJdLCJuYW1lcyI6WyJnZXRGaWxlIiwiZmlsZVBhdGgiLCJlbnRyaWVzIiwiZ2V0Qk5GIiwiZ2V0RmlsZXMiLCJnZXRUZXJtQk5GIiwiZ2V0VmVyc2lvbiIsImdldFBhdHRlcm4iLCJnZXRGaWxlUGF0aHMiLCJnZXRSZXBvc2l0b3J5IiwiZ2V0UmVhZG1lRmlsZSIsImdldFR5cGVQYXR0ZXJuIiwiZ2V0U3RhdGVtZW50Qk5GIiwiZ2V0RGVwZW5kZW5jaWVzIiwiZ2V0TWV0YUpTT05GaWxlIiwiZ2V0U3ltYm9sUGF0dGVybiIsImdldEZsb3JlbmNlRmlsZXMiLCJnZXREaXJlY3RvcnlQYXRocyIsImdldE9wZXJhdG9yUGF0dGVybiIsImdldERlcGVuZGVuY3lOYW1lcyIsImdldE1ldGFzdGF0ZW1lbnRCTkYiLCJnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMiLCJnZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzIiwiZW50cmllc01peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBcUVBOzs7ZUFBQTs7O0FBbkVBLFNBQVNBLFFBQVFDLFFBQVEsRUFBRTtJQUFFLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNGLE9BQU8sQ0FBQ0M7QUFBVztBQUVwRSxTQUFTRSxTQUFTO0lBQUUsT0FBTyxJQUFJLENBQUNELE9BQU8sQ0FBQ0MsTUFBTTtBQUFJO0FBRWxELFNBQVNDLFdBQVc7SUFBRSxPQUFPLElBQUksQ0FBQ0YsT0FBTyxDQUFDRSxRQUFRO0FBQUk7QUFFdEQsU0FBU0MsYUFBYTtJQUFFLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNHLFVBQVU7QUFBSTtBQUUxRCxTQUFTQyxhQUFhO0lBQUUsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ksVUFBVTtBQUFJO0FBRTFELFNBQVNDLGFBQWE7SUFBRSxPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDSyxVQUFVO0FBQUk7QUFFMUQsU0FBU0MsZUFBZTtJQUFFLE9BQU8sSUFBSSxDQUFDTixPQUFPLENBQUNNLFlBQVk7QUFBSTtBQUU5RCxTQUFTQyxnQkFBZ0I7SUFBRSxPQUFPLElBQUksQ0FBQ1AsT0FBTyxDQUFDTyxhQUFhO0FBQUk7QUFFaEUsU0FBU0MsZ0JBQWdCO0lBQUUsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ1EsYUFBYTtBQUFJO0FBRWhFLFNBQVNDLGlCQUFpQjtJQUFFLE9BQU8sSUFBSSxDQUFDVCxPQUFPLENBQUNTLGNBQWM7QUFBSTtBQUVsRSxTQUFTQyxrQkFBa0I7SUFBRSxPQUFPLElBQUksQ0FBQ1YsT0FBTyxDQUFDVSxlQUFlO0FBQUk7QUFFcEUsU0FBU0Msa0JBQWtCO0lBQUUsT0FBTyxJQUFJLENBQUNYLE9BQU8sQ0FBQ1csZUFBZTtBQUFJO0FBRXBFLFNBQVNDLGtCQUFrQjtJQUFFLE9BQU8sSUFBSSxDQUFDWixPQUFPLENBQUNZLGVBQWU7QUFBSTtBQUVwRSxTQUFTQyxtQkFBbUI7SUFBRSxPQUFPLElBQUksQ0FBQ2IsT0FBTyxDQUFDYSxnQkFBZ0I7QUFBSTtBQUV0RSxTQUFTQyxtQkFBbUI7SUFBRSxPQUFPLElBQUksQ0FBQ2QsT0FBTyxDQUFDYyxnQkFBZ0I7QUFBSTtBQUV0RSxTQUFTQyxvQkFBb0I7SUFBRSxPQUFPLElBQUksQ0FBQ2YsT0FBTyxDQUFDZSxpQkFBaUI7QUFBSTtBQUV4RSxTQUFTQyxxQkFBcUI7SUFBRSxPQUFPLElBQUksQ0FBQ2hCLE9BQU8sQ0FBQ2dCLGtCQUFrQjtBQUFJO0FBRTFFLFNBQVNDLHFCQUFxQjtJQUFFLE9BQU8sSUFBSSxDQUFDakIsT0FBTyxDQUFDaUIsa0JBQWtCO0FBQUk7QUFFMUUsU0FBU0Msc0JBQXNCO0lBQUUsT0FBTyxJQUFJLENBQUNsQixPQUFPLENBQUNrQixtQkFBbUI7QUFBSTtBQUU1RSxTQUFTQywyQkFBMkI7SUFBRSxPQUFPLElBQUksQ0FBQ25CLE9BQU8sQ0FBQ21CLHdCQUF3QjtBQUFJO0FBRXRGLFNBQVNDLCtCQUErQjtJQUFFLE9BQU8sSUFBSSxDQUFDcEIsT0FBTyxDQUFDb0IsNEJBQTRCO0FBQUk7QUFHOUYsSUFBTUMsZ0JBQWdCO0lBQ3BCdkIsU0FBQUE7SUFDQUcsUUFBQUE7SUFDQUMsVUFBQUE7SUFDQUMsWUFBQUE7SUFDQUMsWUFBQUE7SUFDQUMsWUFBQUE7SUFDQUMsY0FBQUE7SUFDQUMsZUFBQUE7SUFDQUMsZUFBQUE7SUFDQUMsZ0JBQUFBO0lBQ0FDLGlCQUFBQTtJQUNBQyxpQkFBQUE7SUFDQUMsaUJBQUFBO0lBQ0FDLGtCQUFBQTtJQUNBQyxrQkFBQUE7SUFDQUMsbUJBQUFBO0lBQ0FDLG9CQUFBQTtJQUNBQyxvQkFBQUE7SUFDQUMscUJBQUFBO0lBQ0FDLDBCQUFBQTtJQUNBQyw4QkFBQUE7QUFDRjtJQUVBLFdBQWVDIn0=