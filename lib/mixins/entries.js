"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function forEachFile(callback) {
    return this.entries.forEachFile(callback);
}
function getFile(filePath) {
    return this.entries.getFile(filePath);
}
function getBNF() {
    return this.entries.getBNF();
}
function getFiles() {
    return this.entries.getFiles();
}
function getTermBNF() {
    return this.entries.getTermBNF();
}
function getVersion() {
    return this.entries.getVersion();
}
function getPattern() {
    return this.entries.getPattern();
}
function getFilePaths() {
    return this.entries.getFilePaths();
}
function getRepository() {
    return this.entries.getRepository();
}
function getReadmeFile() {
    return this.entries.getReadmeFile();
}
function getTypePattern() {
    return this.entries.getTypePattern();
}
function getStatementBNF() {
    return this.entries.getStatementBNF();
}
function getDependencies() {
    return this.entries.getDependencies();
}
function getMetaJSONFile() {
    return this.entries.getMetaJSONFile();
}
function getSymbolPattern() {
    return this.entries.getSymbolPattern();
}
function getFlorenceFiles() {
    return this.entries.getFlorenceFiles();
}
function getDirectoryPaths() {
    return this.entries.getDirectoryPaths();
}
function getOperatorPattern() {
    return this.entries.getOperatorPattern();
}
function getDependencyNames() {
    return this.entries.getDependencyNames();
}
function getCustomGrammarBNFFiles() {
    return this.entries.getCustomGrammarBNFFiles();
}
function getCustomGrammarPatternFiles() {
    return this.entries.getCustomGrammarPatternFiles();
}
var entriesMixins = {
    forEachFile: forEachFile,
    getFile: getFile,
    getBNF: getBNF,
    getFiles: getFiles,
    getTermBNF: getTermBNF,
    getVersion: getVersion,
    getPattern: getPattern,
    getFilePaths: getFilePaths,
    getRepository: getRepository,
    getReadmeFile: getReadmeFile,
    getTypePattern: getTypePattern,
    getStatementBNF: getStatementBNF,
    getDependencies: getDependencies,
    getMetaJSONFile: getMetaJSONFile,
    getSymbolPattern: getSymbolPattern,
    getFlorenceFiles: getFlorenceFiles,
    getDirectoryPaths: getDirectoryPaths,
    getOperatorPattern: getOperatorPattern,
    getDependencyNames: getDependencyNames,
    getCustomGrammarBNFFiles: getCustomGrammarBNFFiles,
    getCustomGrammarPatternFiles: getCustomGrammarPatternFiles
};
var _default = entriesMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZW50cmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gZm9yRWFjaEZpbGUoY2FsbGJhY2spIHsgcmV0dXJuIHRoaXMuZW50cmllcy5mb3JFYWNoRmlsZShjYWxsYmFjayk7IH1cblxuZnVuY3Rpb24gZ2V0RmlsZShmaWxlUGF0aCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldEZpbGUoZmlsZVBhdGgpOyB9XG5cbmZ1bmN0aW9uIGdldEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXRGaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldFRlcm1CTkYoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VGVybUJORigpOyB9XG5cbmZ1bmN0aW9uIGdldFZlcnNpb24oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0VmVyc2lvbigpOyB9XG5cbmZ1bmN0aW9uIGdldFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0UGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZpbGVQYXRocygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRGaWxlUGF0aHMoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZXBvc2l0b3J5KCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlcG9zaXRvcnkoKTsgfVxuXG5mdW5jdGlvbiBnZXRSZWFkbWVGaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldFJlYWRtZUZpbGUoKTsgfVxuXG5mdW5jdGlvbiBnZXRUeXBlUGF0dGVybigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRUeXBlUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldFN0YXRlbWVudEJORigpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRTdGF0ZW1lbnRCTkYoKTsgfVxuXG5mdW5jdGlvbiBnZXREZXBlbmRlbmNpZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RGVwZW5kZW5jaWVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0TWV0YUpTT05GaWxlKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE1ldGFKU09ORmlsZSgpOyB9XG5cbmZ1bmN0aW9uIGdldFN5bWJvbFBhdHRlcm4oKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0U3ltYm9sUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldEZsb3JlbmNlRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0RmxvcmVuY2VGaWxlcygpOyB9XG5cbmZ1bmN0aW9uIGdldERpcmVjdG9yeVBhdGhzKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldERpcmVjdG9yeVBhdGhzKCk7IH1cblxuZnVuY3Rpb24gZ2V0T3BlcmF0b3JQYXR0ZXJuKCkgeyByZXR1cm4gdGhpcy5lbnRyaWVzLmdldE9wZXJhdG9yUGF0dGVybigpOyB9XG5cbmZ1bmN0aW9uIGdldERlcGVuZGVuY3lOYW1lcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXREZXBlbmRlbmN5TmFtZXMoKTsgfVxuXG5mdW5jdGlvbiBnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMoKSB7IHJldHVybiB0aGlzLmVudHJpZXMuZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzKCk7IH1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcygpIHsgcmV0dXJuIHRoaXMuZW50cmllcy5nZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzKCk7IH1cblxuXG5jb25zdCBlbnRyaWVzTWl4aW5zID0ge1xuICBmb3JFYWNoRmlsZSxcbiAgZ2V0RmlsZSxcbiAgZ2V0Qk5GLFxuICBnZXRGaWxlcyxcbiAgZ2V0VGVybUJORixcbiAgZ2V0VmVyc2lvbixcbiAgZ2V0UGF0dGVybixcbiAgZ2V0RmlsZVBhdGhzLFxuICBnZXRSZXBvc2l0b3J5LFxuICBnZXRSZWFkbWVGaWxlLFxuICBnZXRUeXBlUGF0dGVybixcbiAgZ2V0U3RhdGVtZW50Qk5GLFxuICBnZXREZXBlbmRlbmNpZXMsXG4gIGdldE1ldGFKU09ORmlsZSxcbiAgZ2V0U3ltYm9sUGF0dGVybixcbiAgZ2V0RmxvcmVuY2VGaWxlcyxcbiAgZ2V0RGlyZWN0b3J5UGF0aHMsXG4gIGdldE9wZXJhdG9yUGF0dGVybixcbiAgZ2V0RGVwZW5kZW5jeU5hbWVzLFxuICBnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMsXG4gIGdldEN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGVudHJpZXNNaXhpbnM7XG4iXSwibmFtZXMiOlsiZm9yRWFjaEZpbGUiLCJjYWxsYmFjayIsImVudHJpZXMiLCJnZXRGaWxlIiwiZmlsZVBhdGgiLCJnZXRCTkYiLCJnZXRGaWxlcyIsImdldFRlcm1CTkYiLCJnZXRWZXJzaW9uIiwiZ2V0UGF0dGVybiIsImdldEZpbGVQYXRocyIsImdldFJlcG9zaXRvcnkiLCJnZXRSZWFkbWVGaWxlIiwiZ2V0VHlwZVBhdHRlcm4iLCJnZXRTdGF0ZW1lbnRCTkYiLCJnZXREZXBlbmRlbmNpZXMiLCJnZXRNZXRhSlNPTkZpbGUiLCJnZXRTeW1ib2xQYXR0ZXJuIiwiZ2V0RmxvcmVuY2VGaWxlcyIsImdldERpcmVjdG9yeVBhdGhzIiwiZ2V0T3BlcmF0b3JQYXR0ZXJuIiwiZ2V0RGVwZW5kZW5jeU5hbWVzIiwiZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzIiwiZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcyIsImVudHJpZXNNaXhpbnMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQXFFQTs7O2VBQUE7OztBQW5FQSxTQUFTQSxZQUFZQyxRQUFRO0lBQUksT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0YsV0FBVyxDQUFDQztBQUFXO0FBRTVFLFNBQVNFLFFBQVFDLFFBQVE7SUFBSSxPQUFPLElBQUksQ0FBQ0YsT0FBTyxDQUFDQyxPQUFPLENBQUNDO0FBQVc7QUFFcEUsU0FBU0M7SUFBVyxPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDRyxNQUFNO0FBQUk7QUFFbEQsU0FBU0M7SUFBYSxPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSSxRQUFRO0FBQUk7QUFFdEQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDSyxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ04sT0FBTyxDQUFDTSxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBZSxPQUFPLElBQUksQ0FBQ1AsT0FBTyxDQUFDTyxVQUFVO0FBQUk7QUFFMUQsU0FBU0M7SUFBaUIsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ1EsWUFBWTtBQUFJO0FBRTlELFNBQVNDO0lBQWtCLE9BQU8sSUFBSSxDQUFDVCxPQUFPLENBQUNTLGFBQWE7QUFBSTtBQUVoRSxTQUFTQztJQUFrQixPQUFPLElBQUksQ0FBQ1YsT0FBTyxDQUFDVSxhQUFhO0FBQUk7QUFFaEUsU0FBU0M7SUFBbUIsT0FBTyxJQUFJLENBQUNYLE9BQU8sQ0FBQ1csY0FBYztBQUFJO0FBRWxFLFNBQVNDO0lBQW9CLE9BQU8sSUFBSSxDQUFDWixPQUFPLENBQUNZLGVBQWU7QUFBSTtBQUVwRSxTQUFTQztJQUFvQixPQUFPLElBQUksQ0FBQ2IsT0FBTyxDQUFDYSxlQUFlO0FBQUk7QUFFcEUsU0FBU0M7SUFBb0IsT0FBTyxJQUFJLENBQUNkLE9BQU8sQ0FBQ2MsZUFBZTtBQUFJO0FBRXBFLFNBQVNDO0lBQXFCLE9BQU8sSUFBSSxDQUFDZixPQUFPLENBQUNlLGdCQUFnQjtBQUFJO0FBRXRFLFNBQVNDO0lBQXFCLE9BQU8sSUFBSSxDQUFDaEIsT0FBTyxDQUFDZ0IsZ0JBQWdCO0FBQUk7QUFFdEUsU0FBU0M7SUFBc0IsT0FBTyxJQUFJLENBQUNqQixPQUFPLENBQUNpQixpQkFBaUI7QUFBSTtBQUV4RSxTQUFTQztJQUF1QixPQUFPLElBQUksQ0FBQ2xCLE9BQU8sQ0FBQ2tCLGtCQUFrQjtBQUFJO0FBRTFFLFNBQVNDO0lBQXVCLE9BQU8sSUFBSSxDQUFDbkIsT0FBTyxDQUFDbUIsa0JBQWtCO0FBQUk7QUFFMUUsU0FBU0M7SUFBNkIsT0FBTyxJQUFJLENBQUNwQixPQUFPLENBQUNvQix3QkFBd0I7QUFBSTtBQUV0RixTQUFTQztJQUFpQyxPQUFPLElBQUksQ0FBQ3JCLE9BQU8sQ0FBQ3FCLDRCQUE0QjtBQUFJO0FBRzlGLElBQU1DLGdCQUFnQjtJQUNwQnhCLGFBQUFBO0lBQ0FHLFNBQUFBO0lBQ0FFLFFBQUFBO0lBQ0FDLFVBQUFBO0lBQ0FDLFlBQUFBO0lBQ0FDLFlBQUFBO0lBQ0FDLFlBQUFBO0lBQ0FDLGNBQUFBO0lBQ0FDLGVBQUFBO0lBQ0FDLGVBQUFBO0lBQ0FDLGdCQUFBQTtJQUNBQyxpQkFBQUE7SUFDQUMsaUJBQUFBO0lBQ0FDLGlCQUFBQTtJQUNBQyxrQkFBQUE7SUFDQUMsa0JBQUFBO0lBQ0FDLG1CQUFBQTtJQUNBQyxvQkFBQUE7SUFDQUMsb0JBQUFBO0lBQ0FDLDBCQUFBQTtJQUNBQyw4QkFBQUE7QUFDRjtJQUVBLFdBQWVDIn0=