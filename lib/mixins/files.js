"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _files = require("../utilities/files");
function getReadmeFile() {
    var files = this.getFiles(), readmeFile = (0, _files.readmeFileFromFiles)(files);
    return readmeFile;
}
function getMetaJSONFile() {
    var files = this.getFiles(), metaJSONFile = (0, _files.metaJSONFileFromFiles)(files);
    return metaJSONFile;
}
function getFurtleFiles() {
    var files = this.getFiles(), furtleFiles = furtleFilesFromFiles(files);
    return furtleFiles;
}
function getNominalFiles() {
    var files = this.getFiles(), nominalFiles = (0, _files.nominalFilesFromFiles)(files);
    return nominalFiles;
}
function getCustomGrammarBNFFiles() {
    var files = this.getFiles(), customGrammarBNFFiles = (0, _files.customGrammarBNFFilesFromFiles)(files);
    return customGrammarBNFFiles;
}
function getCustomGrammarPatternFiles() {
    var files = this.getFiles(), customGrammarPatternFiles = (0, _files.customGrammarPatternFilesFromFiles)(files);
    return customGrammarPatternFiles;
}
var filesMixins = {
    getReadmeFile: getReadmeFile,
    getMetaJSONFile: getMetaJSONFile,
    getFurtleFiles: getFurtleFiles,
    getNominalFiles: getNominalFiles,
    getCustomGrammarBNFFiles: getCustomGrammarBNFFiles,
    getCustomGrammarPatternFiles: getCustomGrammarPatternFiles
};
var _default = filesMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZmlsZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHJlYWRtZUZpbGVGcm9tRmlsZXMsXG4gICAgICAgICBtZXRhSlNPTkZpbGVGcm9tRmlsZXMsXG4gICAgICAgICBub21pbmFsRmlsZXNGcm9tRmlsZXMsXG4gICAgICAgICBjdXN0b21HcmFtbWFyQk5GRmlsZXNGcm9tRmlsZXMsXG4gICAgICAgICBjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzRnJvbUZpbGVzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9maWxlc1wiO1xuXG5mdW5jdGlvbiBnZXRSZWFkbWVGaWxlKCkge1xuICBjb25zdCBmaWxlcyA9IHRoaXMuZ2V0RmlsZXMoKSxcbiAgICAgICAgcmVhZG1lRmlsZSA9IHJlYWRtZUZpbGVGcm9tRmlsZXMoZmlsZXMpO1xuXG4gIHJldHVybiByZWFkbWVGaWxlO1xufVxuXG5mdW5jdGlvbiBnZXRNZXRhSlNPTkZpbGUoKSB7XG4gIGNvbnN0IGZpbGVzID0gdGhpcy5nZXRGaWxlcygpLFxuICAgICAgICBtZXRhSlNPTkZpbGUgPSBtZXRhSlNPTkZpbGVGcm9tRmlsZXMoZmlsZXMpO1xuXG4gIHJldHVybiBtZXRhSlNPTkZpbGU7XG59XG5cbmZ1bmN0aW9uIGdldEZ1cnRsZUZpbGVzKCkge1xuICBjb25zdCBmaWxlcyA9IHRoaXMuZ2V0RmlsZXMoKSxcbiAgICAgICAgZnVydGxlRmlsZXMgPSBmdXJ0bGVGaWxlc0Zyb21GaWxlcyhmaWxlcyk7XG5cbiAgcmV0dXJuIGZ1cnRsZUZpbGVzO1xufVxuXG5mdW5jdGlvbiBnZXROb21pbmFsRmlsZXMoKSB7XG4gIGNvbnN0IGZpbGVzID0gdGhpcy5nZXRGaWxlcygpLFxuICAgICAgICBub21pbmFsRmlsZXMgPSBub21pbmFsRmlsZXNGcm9tRmlsZXMoZmlsZXMpO1xuXG4gIHJldHVybiBub21pbmFsRmlsZXM7XG59XG5cbmZ1bmN0aW9uIGdldEN1c3RvbUdyYW1tYXJCTkZGaWxlcygpIHtcbiAgY29uc3QgZmlsZXMgPSB0aGlzLmdldEZpbGVzKCksXG4gICAgICAgIGN1c3RvbUdyYW1tYXJCTkZGaWxlcyA9IGN1c3RvbUdyYW1tYXJCTkZGaWxlc0Zyb21GaWxlcyhmaWxlcyk7XG5cbiAgcmV0dXJuIGN1c3RvbUdyYW1tYXJCTkZGaWxlcztcbn1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcygpIHtcbiAgY29uc3QgZmlsZXMgPSB0aGlzLmdldEZpbGVzKCksXG4gICAgICAgIGN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXMgPSBjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzRnJvbUZpbGVzKGZpbGVzKTtcblxuICByZXR1cm4gY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcztcbn1cblxuY29uc3QgZmlsZXNNaXhpbnMgPSB7XG4gIGdldFJlYWRtZUZpbGUsXG4gIGdldE1ldGFKU09ORmlsZSxcbiAgZ2V0RnVydGxlRmlsZXMsXG4gIGdldE5vbWluYWxGaWxlcyxcbiAgZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzLFxuICBnZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmaWxlc01peGlucztcbiJdLCJuYW1lcyI6WyJnZXRSZWFkbWVGaWxlIiwiZmlsZXMiLCJnZXRGaWxlcyIsInJlYWRtZUZpbGUiLCJyZWFkbWVGaWxlRnJvbUZpbGVzIiwiZ2V0TWV0YUpTT05GaWxlIiwibWV0YUpTT05GaWxlIiwibWV0YUpTT05GaWxlRnJvbUZpbGVzIiwiZ2V0RnVydGxlRmlsZXMiLCJmdXJ0bGVGaWxlcyIsImZ1cnRsZUZpbGVzRnJvbUZpbGVzIiwiZ2V0Tm9taW5hbEZpbGVzIiwibm9taW5hbEZpbGVzIiwibm9taW5hbEZpbGVzRnJvbUZpbGVzIiwiZ2V0Q3VzdG9tR3JhbW1hckJORkZpbGVzIiwiY3VzdG9tR3JhbW1hckJORkZpbGVzIiwiY3VzdG9tR3JhbW1hckJORkZpbGVzRnJvbUZpbGVzIiwiZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcyIsImN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXMiLCJjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzRnJvbUZpbGVzIiwiZmlsZXNNaXhpbnMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQTJEQTs7O2VBQUE7OztxQkFyRG1EO0FBRW5ELFNBQVNBO0lBQ1AsSUFBTUMsUUFBUSxJQUFJLENBQUNDLFFBQVEsSUFDckJDLGFBQWFDLElBQUFBLDBCQUFtQixFQUFDSDtJQUV2QyxPQUFPRTtBQUNUO0FBRUEsU0FBU0U7SUFDUCxJQUFNSixRQUFRLElBQUksQ0FBQ0MsUUFBUSxJQUNyQkksZUFBZUMsSUFBQUEsNEJBQXFCLEVBQUNOO0lBRTNDLE9BQU9LO0FBQ1Q7QUFFQSxTQUFTRTtJQUNQLElBQU1QLFFBQVEsSUFBSSxDQUFDQyxRQUFRLElBQ3JCTyxjQUFjQyxxQkFBcUJUO0lBRXpDLE9BQU9RO0FBQ1Q7QUFFQSxTQUFTRTtJQUNQLElBQU1WLFFBQVEsSUFBSSxDQUFDQyxRQUFRLElBQ3JCVSxlQUFlQyxJQUFBQSw0QkFBcUIsRUFBQ1o7SUFFM0MsT0FBT1c7QUFDVDtBQUVBLFNBQVNFO0lBQ1AsSUFBTWIsUUFBUSxJQUFJLENBQUNDLFFBQVEsSUFDckJhLHdCQUF3QkMsSUFBQUEscUNBQThCLEVBQUNmO0lBRTdELE9BQU9jO0FBQ1Q7QUFFQSxTQUFTRTtJQUNQLElBQU1oQixRQUFRLElBQUksQ0FBQ0MsUUFBUSxJQUNyQmdCLDRCQUE0QkMsSUFBQUEseUNBQWtDLEVBQUNsQjtJQUVyRSxPQUFPaUI7QUFDVDtBQUVBLElBQU1FLGNBQWM7SUFDbEJwQixlQUFBQTtJQUNBSyxpQkFBQUE7SUFDQUcsZ0JBQUFBO0lBQ0FHLGlCQUFBQTtJQUNBRywwQkFBQUE7SUFDQUcsOEJBQUFBO0FBQ0Y7SUFFQSxXQUFlRyJ9