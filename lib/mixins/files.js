"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _files = require("../utilities/files");
function getReadmeFile() {
    var files = this.getFiles(), readmeFile = (0, _files.readmeFileFromFiles)(files);
    return readmeFile;
}
function getMetaJSONFile() {
    var files = this.getFiles(), metaJSONFile = (0, _files.metaJSONFileFromFiles)(files);
    return metaJSONFile;
}
function getFlorenceFiles() {
    var files = this.getFiles(), florenceFiles = (0, _files.florenceFilesFromFiles)(files);
    return florenceFiles;
}
function getContextJSONFile() {
    var files = this.getFiles(), contextJSONFile = (0, _files.contextJSONFileFromFiles)(files);
    return contextJSONFile;
}
function getCustomGrammarBNFFiles() {
    var files = this.getFiles(), customGrammarBNFFiles = (0, _files.customGrammarBNFFilesFromFiles)(files);
    return customGrammarBNFFiles;
}
function getCustomGrammarPatternFiles() {
    var files = this.getFiles(), customGrammarPatternFiles = (0, _files.customGrammarPatternFilesFromFiles)(files);
    return customGrammarPatternFiles;
}
var filesMixins = {
    getReadmeFile: getReadmeFile,
    getMetaJSONFile: getMetaJSONFile,
    getFlorenceFiles: getFlorenceFiles,
    getContextJSONFile: getContextJSONFile,
    getCustomGrammarBNFFiles: getCustomGrammarBNFFiles,
    getCustomGrammarPatternFiles: getCustomGrammarPatternFiles
};
var _default = filesMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZmlsZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHJlYWRtZUZpbGVGcm9tRmlsZXMsXG4gICAgICAgICBtZXRhSlNPTkZpbGVGcm9tRmlsZXMsXG4gICAgICAgICBmbG9yZW5jZUZpbGVzRnJvbUZpbGVzLFxuICAgICAgICAgY29udGV4dEpTT05GaWxlRnJvbUZpbGVzLFxuICAgICAgICAgY3VzdG9tR3JhbW1hckJORkZpbGVzRnJvbUZpbGVzLFxuICAgICAgICAgY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlc0Zyb21GaWxlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvZmlsZXNcIjtcblxuZnVuY3Rpb24gZ2V0UmVhZG1lRmlsZSgpIHtcbiAgY29uc3QgZmlsZXMgPSB0aGlzLmdldEZpbGVzKCksXG4gICAgICAgIHJlYWRtZUZpbGUgPSByZWFkbWVGaWxlRnJvbUZpbGVzKGZpbGVzKTtcblxuICByZXR1cm4gcmVhZG1lRmlsZTtcbn1cblxuZnVuY3Rpb24gZ2V0TWV0YUpTT05GaWxlKCkge1xuICBjb25zdCBmaWxlcyA9IHRoaXMuZ2V0RmlsZXMoKSxcbiAgICAgICAgbWV0YUpTT05GaWxlID0gbWV0YUpTT05GaWxlRnJvbUZpbGVzKGZpbGVzKTtcblxuICByZXR1cm4gbWV0YUpTT05GaWxlO1xufVxuXG5mdW5jdGlvbiBnZXRGbG9yZW5jZUZpbGVzKCkge1xuICBjb25zdCBmaWxlcyA9IHRoaXMuZ2V0RmlsZXMoKSxcbiAgICAgICAgZmxvcmVuY2VGaWxlcyA9IGZsb3JlbmNlRmlsZXNGcm9tRmlsZXMoZmlsZXMpO1xuXG4gIHJldHVybiBmbG9yZW5jZUZpbGVzO1xufVxuXG5mdW5jdGlvbiBnZXRDb250ZXh0SlNPTkZpbGUoKSB7XG4gIGNvbnN0IGZpbGVzID0gdGhpcy5nZXRGaWxlcygpLFxuICAgICAgICBjb250ZXh0SlNPTkZpbGUgPSBjb250ZXh0SlNPTkZpbGVGcm9tRmlsZXMoZmlsZXMpO1xuXG4gIHJldHVybiBjb250ZXh0SlNPTkZpbGU7XG59XG5cbmZ1bmN0aW9uIGdldEN1c3RvbUdyYW1tYXJCTkZGaWxlcygpIHtcbiAgY29uc3QgZmlsZXMgPSB0aGlzLmdldEZpbGVzKCksXG4gICAgICAgIGN1c3RvbUdyYW1tYXJCTkZGaWxlcyA9IGN1c3RvbUdyYW1tYXJCTkZGaWxlc0Zyb21GaWxlcyhmaWxlcyk7XG5cbiAgcmV0dXJuIGN1c3RvbUdyYW1tYXJCTkZGaWxlcztcbn1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcygpIHtcbiAgY29uc3QgZmlsZXMgPSB0aGlzLmdldEZpbGVzKCksXG4gICAgICAgIGN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXMgPSBjdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzRnJvbUZpbGVzKGZpbGVzKTtcblxuICByZXR1cm4gY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcztcbn1cblxuY29uc3QgZmlsZXNNaXhpbnMgPSB7XG4gIGdldFJlYWRtZUZpbGUsXG4gIGdldE1ldGFKU09ORmlsZSxcbiAgZ2V0RmxvcmVuY2VGaWxlcyxcbiAgZ2V0Q29udGV4dEpTT05GaWxlLFxuICBnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMsXG4gIGdldEN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZpbGVzTWl4aW5zO1xuIl0sIm5hbWVzIjpbImdldFJlYWRtZUZpbGUiLCJmaWxlcyIsImdldEZpbGVzIiwicmVhZG1lRmlsZSIsInJlYWRtZUZpbGVGcm9tRmlsZXMiLCJnZXRNZXRhSlNPTkZpbGUiLCJtZXRhSlNPTkZpbGUiLCJtZXRhSlNPTkZpbGVGcm9tRmlsZXMiLCJnZXRGbG9yZW5jZUZpbGVzIiwiZmxvcmVuY2VGaWxlcyIsImZsb3JlbmNlRmlsZXNGcm9tRmlsZXMiLCJnZXRDb250ZXh0SlNPTkZpbGUiLCJjb250ZXh0SlNPTkZpbGUiLCJjb250ZXh0SlNPTkZpbGVGcm9tRmlsZXMiLCJnZXRDdXN0b21HcmFtbWFyQk5GRmlsZXMiLCJjdXN0b21HcmFtbWFyQk5GRmlsZXMiLCJjdXN0b21HcmFtbWFyQk5GRmlsZXNGcm9tRmlsZXMiLCJnZXRDdXN0b21HcmFtbWFyUGF0dGVybkZpbGVzIiwiY3VzdG9tR3JhbW1hclBhdHRlcm5GaWxlcyIsImN1c3RvbUdyYW1tYXJQYXR0ZXJuRmlsZXNGcm9tRmlsZXMiLCJmaWxlc01peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBNERBOzs7ZUFBQTs7O3FCQXJEbUQ7QUFFbkQsU0FBU0EsZ0JBQWdCO0lBQ3ZCLElBQU1DLFFBQVEsSUFBSSxDQUFDQyxRQUFRLElBQ3JCQyxhQUFhQyxJQUFBQSwwQkFBbUIsRUFBQ0g7SUFFdkMsT0FBT0U7QUFDVDtBQUVBLFNBQVNFLGtCQUFrQjtJQUN6QixJQUFNSixRQUFRLElBQUksQ0FBQ0MsUUFBUSxJQUNyQkksZUFBZUMsSUFBQUEsNEJBQXFCLEVBQUNOO0lBRTNDLE9BQU9LO0FBQ1Q7QUFFQSxTQUFTRSxtQkFBbUI7SUFDMUIsSUFBTVAsUUFBUSxJQUFJLENBQUNDLFFBQVEsSUFDckJPLGdCQUFnQkMsSUFBQUEsNkJBQXNCLEVBQUNUO0lBRTdDLE9BQU9RO0FBQ1Q7QUFFQSxTQUFTRSxxQkFBcUI7SUFDNUIsSUFBTVYsUUFBUSxJQUFJLENBQUNDLFFBQVEsSUFDckJVLGtCQUFrQkMsSUFBQUEsK0JBQXdCLEVBQUNaO0lBRWpELE9BQU9XO0FBQ1Q7QUFFQSxTQUFTRSwyQkFBMkI7SUFDbEMsSUFBTWIsUUFBUSxJQUFJLENBQUNDLFFBQVEsSUFDckJhLHdCQUF3QkMsSUFBQUEscUNBQThCLEVBQUNmO0lBRTdELE9BQU9jO0FBQ1Q7QUFFQSxTQUFTRSwrQkFBK0I7SUFDdEMsSUFBTWhCLFFBQVEsSUFBSSxDQUFDQyxRQUFRLElBQ3JCZ0IsNEJBQTRCQyxJQUFBQSx5Q0FBa0MsRUFBQ2xCO0lBRXJFLE9BQU9pQjtBQUNUO0FBRUEsSUFBTUUsY0FBYztJQUNsQnBCLGVBQUFBO0lBQ0FLLGlCQUFBQTtJQUNBRyxrQkFBQUE7SUFDQUcsb0JBQUFBO0lBQ0FHLDBCQUFBQTtJQUNBRyw4QkFBQUE7QUFDRjtJQUVBLFdBQWVHIn0=