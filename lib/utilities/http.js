"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.post = post;
exports.default = void 0;
var _stream = require("stream");
var _necessary = require("necessary");
var _constants = require("../constants");
var postEx = _necessary.requestUtilities.post;
function post(host, uri, parameters, json, callback) {
    var content = JSON.stringify(json), contentLength = content.length, headers = {
    };
    headers[_constants.CONTENT_LENGTH] = contentLength;
    var request = postEx(host, uri, parameters, headers, function(error, response) {
        var statusCode = response.statusCode;
        error = error || statusCode !== _constants.OKAY_200;
        if (error) {
            var json = null;
            callback(json);
            return;
        }
        bodyFromResponse(response, function(body) {
            var json = null;
            try {
                json = JSON.parse(body);
            } catch (error) {
            } ///
            callback(json);
        });
    }), readable = _stream.Readable.from(content);
    readable.pipe(request);
}
var _default = {
    post: post
};
exports.default = _default;
function bodyFromResponse(response, callback) {
    var body = _constants.EMPTY_STRING;
    response.on(_constants.DATA, function(data) {
        body += data;
    });
    response.on(_constants.END, function() {
        callback(body);
    });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHR0cC5qcyJdLCJuYW1lcyI6WyJSZWFkYWJsZSIsInJlcXVlc3RVdGlsaXRpZXMiLCJwb3N0IiwicG9zdEV4IiwiRU5EIiwiREFUQSIsIk9LQVlfMjAwIiwiRU1QVFlfU1RSSU5HIiwiQ09OVEVOVF9MRU5HVEgiLCJob3N0IiwidXJpIiwicGFyYW1ldGVycyIsImpzb24iLCJjYWxsYmFjayIsImNvbnRlbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiY29udGVudExlbmd0aCIsImxlbmd0aCIsImhlYWRlcnMiLCJyZXF1ZXN0IiwiZXJyb3IiLCJyZXNwb25zZSIsInN0YXR1c0NvZGUiLCJib2R5RnJvbVJlc3BvbnNlIiwiYm9keSIsInBhcnNlIiwicmVhZGFibGUiLCJmcm9tIiwicGlwZSIsIm9uIiwiZGF0YSJdLCJtYXBwaW5ncyI6IkNBQUEsVUFBWTs7OztRQVVJLElBQUksR0FBSixJQUFJOztBQVJLLEdBQVEsQ0FBUixPQUFRO0FBRUEsR0FBVyxDQUFYLFVBQVc7QUFJc0IsR0FBYyxDQUFkLFVBQWM7QUFGaEYsR0FBSyxDQUFTLE1BQU0sR0FGYSxVQUFXLGtCQUVwQyxJQUFJO1NBSUksSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQztJQUM1RCxHQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUNoQyxhQUFhLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFDOUIsT0FBTyxHQUFHLENBQUM7SUFBQSxDQUFDO0lBRWYsT0FBTyxDQVAwRCxVQUFjLG1CQU9yRCxhQUFhO0lBRXZDLEdBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQVAsS0FBSyxFQUFFLFFBQVEsRUFBSyxDQUFDO1FBQ3pFLEdBQUssQ0FBRyxVQUFVLEdBQUssUUFBUSxDQUF2QixVQUFVO1FBRWxCLEtBQUssR0FBRyxLQUFLLElBQUssVUFBVSxLQVppQyxVQUFjO1FBYzNFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUNYLEdBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSTtZQUVqQixRQUFRLENBQUMsSUFBSTtZQUViLE1BQU07UUFDUCxDQUFDO1FBRUQsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBUCxJQUFJLEVBQUssQ0FBQztZQUNyQyxHQUFHLENBQUMsSUFBSSxHQUFHLElBQUk7WUFFZixHQUFHLENBQUMsQ0FBQztnQkFDSixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJO1lBQ3ZCLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUM7WUFBQSxDQUFDLEFBQUMsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO1lBRXRCLFFBQVEsQ0FBQyxJQUFJO1FBQ2QsQ0FBQztJQUNGLENBQUMsR0FDRCxRQUFRLEdBdENhLE9BQVEsVUFzQ1QsSUFBSSxDQUFDLE9BQU87SUFFbkMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQ3RCLENBQUM7ZUFFYyxDQUFDO0lBQ2YsSUFBSSxFQUFKLElBQUk7QUFDTCxDQUFDOztTQUVRLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQztJQUM5QyxHQUFHLENBQUMsSUFBSSxHQTFDeUQsVUFBYztJQTRDL0UsUUFBUSxDQUFDLEVBQUUsQ0E1Q3NELFVBQWMsT0E0QzdELFFBQVEsQ0FBUCxJQUFJLEVBQUssQ0FBQztRQUM1QixJQUFJLElBQUksSUFBSTtJQUNiLENBQUM7SUFFRCxRQUFRLENBQUMsRUFBRSxDQWhEc0QsVUFBYyxNQWdEOUQsUUFDbEIsR0FEd0IsQ0FBQztRQUN2QixRQUFRLENBQUMsSUFBSTtJQUNkLENBQUM7QUFDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFJlYWRhYmxlIH0gZnJvbSBcInN0cmVhbVwiO1xuXG5pbXBvcnQgeyByZXF1ZXN0VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5jb25zdCB7IHBvc3Q6IHBvc3RFeCB9ID0gcmVxdWVzdFV0aWxpdGllcztcblxuaW1wb3J0IHsgRU5ELCBEQVRBLCBPS0FZXzIwMCwgRU1QVFlfU1RSSU5HLCBDT05URU5UX0xFTkdUSCB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvc3QoaG9zdCwgdXJpLCBwYXJhbWV0ZXJzLCBqc29uLCBjYWxsYmFjaykge1xuXHRjb25zdCBjb250ZW50ID0gSlNPTi5zdHJpbmdpZnkoanNvbiksXHQvLy9cblx0XHRcdFx0Y29udGVudExlbmd0aCA9IGNvbnRlbnQubGVuZ3RoLFxuXHRcdFx0XHRoZWFkZXJzID0ge307XG5cblx0aGVhZGVyc1tDT05URU5UX0xFTkdUSF0gPSBjb250ZW50TGVuZ3RoO1xuXG5cdGNvbnN0IHJlcXVlc3QgPSBwb3N0RXgoaG9zdCwgdXJpLCBwYXJhbWV0ZXJzLCBoZWFkZXJzLCAoZXJyb3IsIHJlc3BvbnNlKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgeyBzdGF0dXNDb2RlIH0gPSByZXNwb25zZTtcblxuXHRcdFx0XHRcdGVycm9yID0gZXJyb3IgfHwgKHN0YXR1c0NvZGUgIT09IE9LQVlfMjAwKTtcblxuXHRcdFx0XHRcdGlmIChlcnJvcikge1xuXHRcdFx0XHRcdFx0Y29uc3QganNvbiA9IG51bGw7XG5cblx0XHRcdFx0XHRcdGNhbGxiYWNrKGpzb24pO1xuXG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ym9keUZyb21SZXNwb25zZShyZXNwb25zZSwgKGJvZHkpID0+IHtcblx0XHRcdFx0XHRcdGxldCBqc29uID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0anNvbiA9IEpTT04ucGFyc2UoYm9keSk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoIChlcnJvcikge31cdC8vL1xuXG5cdFx0XHRcdFx0XHRjYWxsYmFjayhqc29uKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSksXG5cdFx0XHRcdHJlYWRhYmxlID0gUmVhZGFibGUuZnJvbShjb250ZW50KTtcblxuXHRyZWFkYWJsZS5waXBlKHJlcXVlc3QpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG5cdHBvc3Rcbn07XG5cbmZ1bmN0aW9uIGJvZHlGcm9tUmVzcG9uc2UocmVzcG9uc2UsIGNhbGxiYWNrKSB7XG5cdGxldCBib2R5ID0gRU1QVFlfU1RSSU5HO1xuXG5cdHJlc3BvbnNlLm9uKERBVEEsIChkYXRhKSA9PiB7XG5cdFx0Ym9keSArPSBkYXRhO1xuXHR9KTtcblxuXHRyZXNwb25zZS5vbihFTkQsICgpID0+IHtcblx0XHRjYWxsYmFjayhib2R5KTtcblx0fSk7XG59XG4iXX0=