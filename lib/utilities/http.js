"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.post = post;
exports.default = void 0;
var _stream = require("stream");
var _necessary = require("necessary");
var _constants = require("../constants");
var postEx = _necessary.requestUtilities.post;
function post(host, uri, parameters, json, callback) {
    var content = JSON.stringify(json), contentLength = content.length, headers = {
    };
    headers[_constants.CONTENT_LENGTH] = contentLength;
    var request = postEx(host, uri, parameters, headers, function(error, response) {
        var statusCode = response.statusCode;
        error = error || statusCode !== _constants.OKAY_200;
        if (error) {
            var json1 = null;
            callback(json1);
            return;
        }
        bodyFromResponse(response, function(body) {
            var json2 = null;
            try {
                json2 = JSON.parse(body);
            } catch (error1) {
            } ///
            callback(json2);
        });
    }), readable = _stream.Readable.from(content);
    readable.pipe(request);
}
var _default = {
    post: post
};
exports.default = _default;
function bodyFromResponse(response, callback) {
    var body = _constants.EMPTY_STRING;
    response.on(_constants.DATA, function(data) {
        body += data;
    });
    response.on(_constants.END, function() {
        callback(body);
    });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHR0cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUmVhZGFibGUgfSBmcm9tIFwic3RyZWFtXCI7XG5cbmltcG9ydCB7IHJlcXVlc3RVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmNvbnN0IHsgcG9zdDogcG9zdEV4IH0gPSByZXF1ZXN0VXRpbGl0aWVzO1xuXG5pbXBvcnQgeyBFTkQsIERBVEEsIE9LQVlfMjAwLCBFTVBUWV9TVFJJTkcsIENPTlRFTlRfTEVOR1RIIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcG9zdChob3N0LCB1cmksIHBhcmFtZXRlcnMsIGpzb24sIGNhbGxiYWNrKSB7XG5cdGNvbnN0IGNvbnRlbnQgPSBKU09OLnN0cmluZ2lmeShqc29uKSxcdC8vL1xuXHRcdFx0XHRjb250ZW50TGVuZ3RoID0gY29udGVudC5sZW5ndGgsXG5cdFx0XHRcdGhlYWRlcnMgPSB7fTtcblxuXHRoZWFkZXJzW0NPTlRFTlRfTEVOR1RIXSA9IGNvbnRlbnRMZW5ndGg7XG5cblx0Y29uc3QgcmVxdWVzdCA9IHBvc3RFeChob3N0LCB1cmksIHBhcmFtZXRlcnMsIGhlYWRlcnMsIChlcnJvciwgcmVzcG9uc2UpID0+IHtcblx0XHRcdFx0XHRjb25zdCB7IHN0YXR1c0NvZGUgfSA9IHJlc3BvbnNlO1xuXG5cdFx0XHRcdFx0ZXJyb3IgPSBlcnJvciB8fCAoc3RhdHVzQ29kZSAhPT0gT0tBWV8yMDApO1xuXG5cdFx0XHRcdFx0aWYgKGVycm9yKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBqc29uID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0Y2FsbGJhY2soanNvbik7XG5cblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRib2R5RnJvbVJlc3BvbnNlKHJlc3BvbnNlLCAoYm9keSkgPT4ge1xuXHRcdFx0XHRcdFx0bGV0IGpzb24gPSBudWxsO1xuXG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRqc29uID0gSlNPTi5wYXJzZShib2R5KTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7fVx0Ly8vXG5cblx0XHRcdFx0XHRcdGNhbGxiYWNrKGpzb24pO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KSxcblx0XHRcdFx0cmVhZGFibGUgPSBSZWFkYWJsZS5mcm9tKGNvbnRlbnQpO1xuXG5cdHJlYWRhYmxlLnBpcGUocmVxdWVzdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcblx0cG9zdFxufTtcblxuZnVuY3Rpb24gYm9keUZyb21SZXNwb25zZShyZXNwb25zZSwgY2FsbGJhY2spIHtcblx0bGV0IGJvZHkgPSBFTVBUWV9TVFJJTkc7XG5cblx0cmVzcG9uc2Uub24oREFUQSwgKGRhdGEpID0+IHtcblx0XHRib2R5ICs9IGRhdGE7XG5cdH0pO1xuXG5cdHJlc3BvbnNlLm9uKEVORCwgKCkgPT4ge1xuXHRcdGNhbGxiYWNrKGJvZHkpO1xuXHR9KTtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7O1FBVUksSUFBSSxHQUFKLElBQUk7O0FBUkssR0FBUSxDQUFSLE9BQVE7QUFFQSxHQUFXLENBQVgsVUFBVztBQUlzQixHQUFjLENBQWQsVUFBYztBQUZoRixHQUFLLENBQVMsTUFBTSxHQUZhLFVBQVcsa0JBRXBDLElBQUk7U0FJSSxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDO0lBQzVELEdBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQ2hDLGFBQWEsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUM5QixPQUFPOztJQUVWLE9BQU8sQ0FQMEQsVUFBYyxtQkFPckQsYUFBYTtJQUV2QyxHQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxPQUFPLFdBQUcsS0FBSyxFQUFFLFFBQVEsRUFBSyxDQUFDO1FBQ3pFLEdBQUssQ0FBRyxVQUFVLEdBQUssUUFBUSxDQUF2QixVQUFVO1FBRWxCLEtBQUssR0FBRyxLQUFLLElBQUssVUFBVSxLQVppQyxVQUFjO1FBYzNFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUNYLEdBQUssQ0FBQyxLQUFJLEdBQUcsSUFBSTtZQUVqQixRQUFRLENBQUMsS0FBSTs7UUFHZCxDQUFDO1FBRUQsZ0JBQWdCLENBQUMsUUFBUSxXQUFHLElBQUksRUFBSyxDQUFDO1lBQ3JDLEdBQUcsQ0FBQyxLQUFJLEdBQUcsSUFBSTtnQkFFWCxDQUFDO2dCQUNKLEtBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDdkIsQ0FBQyxRQUFRLE1BQUssRUFBRSxDQUFDO1lBQUEsQ0FBQyxBQUFDLENBQUcsQUFBSCxFQUFHLEFBQUgsQ0FBRztZQUV0QixRQUFRLENBQUMsS0FBSTtRQUNkLENBQUM7SUFDRixDQUFDLEdBQ0QsUUFBUSxHQXRDYSxPQUFRLFVBc0NULElBQUksQ0FBQyxPQUFPO0lBRW5DLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTztBQUN0QixDQUFDOztJQUdBLElBQUksRUFBSixJQUFJOzs7U0FHSSxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUM7SUFDOUMsR0FBRyxDQUFDLElBQUksR0ExQ3lELFVBQWM7SUE0Qy9FLFFBQVEsQ0FBQyxFQUFFLENBNUNzRCxVQUFjLGdCQTRDNUQsSUFBSSxFQUFLLENBQUM7UUFDNUIsSUFBSSxJQUFJLElBQUk7SUFDYixDQUFDO0lBRUQsUUFBUSxDQUFDLEVBQUUsQ0FoRHNELFVBQWMsaUJBZ0R4RCxDQUFDO1FBQ3ZCLFFBQVEsQ0FBQyxJQUFJO0lBQ2QsQ0FBQztBQUNGLENBQUMifQ==